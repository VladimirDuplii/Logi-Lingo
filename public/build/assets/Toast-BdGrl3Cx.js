import{a,r as c,j as p}from"./app-CB6H9fcf.js";const l={trackUnitView:async(r,e)=>Promise.resolve(),trackLessonStart:async(r,e,s)=>Promise.resolve(),trackLessonComplete:async(r,e,s)=>Promise.resolve(),completeLesson:async(r,e,s)=>{try{return(await a.post(`/progress/lessons/${r}/complete`,{correct:e,total:s})).data}catch(t){throw console.error(`Error completing lesson ${r}:`,t),t}},trackQuestionAnswered:async(r,e,s,t,n)=>{try{await l.updateChallengeProgress(t,n),n||await l.reduceHearts(t)}catch(g){console.error("trackQuestionAnswered failed",{courseId:r,unitId:e,lessonId:s,challengeId:t,isCorrect:n},g)}},getUserProgress:async()=>{try{return(await a.get("/progress")).data}catch(r){throw console.error("Error fetching user progress:",r),r}},getCourseProgress:async r=>{try{return(await a.get(`/progress/courses/${r}`)).data}catch(e){throw console.error(`Error fetching course progress for course ${r}:`,e),e}},getAllCoursesProgress:async()=>{try{const r=await l.getUserProgress();if(!r.data||!r.data.active_course_id)return{data:{data:[]}};const e=await l.getCourseProgress(r.data.active_course_id);return{data:{data:[{course_id:r.data.active_course_id,course_title:r.data.active_course?r.data.active_course.title:"Unknown Course",course_description:"Course description",completion_percentage:0,completed_units:0,total_units:e.data.length||0,completed_lessons:0,total_lessons:e.data.reduce((s,t)=>s+t.lessons.length,0),total_questions_answered:0,correct_answers_count:0,correct_answers_percentage:0,last_activity_date:new Date().getTime()}]}}}catch(r){throw console.error("Error fetching all courses progress:",r),r}},updateChallengeProgress:async(r,e)=>{try{return(await a.post(`/progress/challenges/${r}`,{completed:e})).data}catch(s){throw console.error(`Error updating challenge progress for challenge ${r}:`,s),s}},reduceHearts:async r=>{try{return(await a.post(`/progress/hearts/reduce/${r}`)).data}catch(e){throw console.error("Error reducing hearts:",e),e}},refillHearts:async()=>{try{return(await a.post("/progress/hearts/refill")).data}catch(r){throw console.error("Error refilling hearts:",r),r}},refillHeartsWithGems:async()=>{try{return(await a.post("/progress/hearts/refill-with-gems")).data}catch(r){throw console.error("Error refilling hearts with gems:",r),r}},getDailyQuests:async()=>{try{return(await a.get("/progress/daily")).data}catch(r){throw console.error("Error fetching daily quests:",r),r}},getPracticeCalendar:async(r,e)=>{try{const s=new URLSearchParams;r&&s.set("month",r),e&&s.set("year",e);const t=s.toString();return(await a.get(`/progress/calendar${t?`?${t}`:""}`)).data}catch(s){throw console.error("Error fetching practice calendar:",s),s}},updateDailyGoal:async r=>{try{return(await a.post("/progress/daily-goal",{daily_goal_xp:r})).data}catch(e){throw console.error("Error updating daily goal:",e),e}},getMyLeague:async()=>{try{return(await a.get("/leaderboard/me")).data}catch(r){throw console.error("Error fetching league info:",r),r}}},u=c.createContext(null);function w({children:r}){const[e,s]=c.useState([]),t=c.useCallback(o=>s(d=>d.filter(i=>i.id!==o)),[]),n=c.useCallback((o,d)=>{const i=Math.random().toString(36).slice(2);s(h=>[...h,{id:i,type:o,message:d}]),setTimeout(()=>t(i),3e3)},[t]),g=c.useMemo(()=>({success:o=>n("success",o),error:o=>n("error",o),info:o=>n("info",o)}),[n]);return p.jsxs(u.Provider,{value:g,children:[r,p.jsx("div",{className:"fixed z-[1000] top-3 right-3 flex flex-col gap-2",children:e.map(o=>p.jsx("div",{className:`rounded-md px-3 py-2 text-sm shadow ring-1 ${o.type==="success"?"bg-green-50 text-green-700 ring-green-200":o.type==="error"?"bg-red-50 text-red-700 ring-red-200":"bg-gray-50 text-gray-700 ring-gray-200"}`,children:o.message},o.id))})]})}const _=()=>c.useContext(u)||{success:()=>{},error:()=>{},info:()=>{}};export{l as P,w as T,_ as u};
